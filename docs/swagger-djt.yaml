openapi: 3.0.0
# XBRL US API
servers:
  - description: Running this application XBRL US server
    url: 'https://api.xbrl.us'
info:
  version: "V1"
  title: XBRL US API
  description: |
    This API defines the XBRL US API. 


    Once an `access_token` has been acquired, use it until it returns a `401`. If this occurs, simply request a new token using the credentials from before. 


  
  contact:
    name: xbrl.us
    email: support@xbrl.us

paths:
  /api/v1/document/search:
      summary: Request networks and relationships from XBRL filings based on search parameters.
      get:
        operationId: getDocumentInfo
        tags: [Documents]
        security:
          - bearerAuth: []
        description: >
          Allows searching for XBRL documents and their content.
        parameters:
          - $ref: '#/components/parameters/document.top-level_Param'
          - $ref: '#/components/parameters/document.uri_Param'
          - $ref: '#/components/parameters/dts.id_Param'
          
          - in: query
            name: fields
            required: true
            style: form
            explode: false
            allowEmptyValue : false
            schema:
                 $ref: '#/components/schemas/document_fields' 
                
            description: List of concepts to return.
          
        responses:
          '200':
            description: __network details__ successfully accepted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                        type: array
                        items:
                           $ref: '#/components/schemas/document_details'
                     
          '400':
            $ref: '#/components/responses/bad_request'
          '401':
            $ref: '#/components/responses/bad_token'
          '405':
            $ref: '#/components/responses/method_not_allowed'
          '500':
            $ref: '#/components/responses/internal_server_error'   
components:
  
  schemas:
    error_message:
      type: object
      properties:
        error:
          type: string
          description: Identifier for the error
        error_description:
          type: string
          description: Adds more details to the error
          
    document_details: 
      type: object
      properties:
        document.top-level:
          $ref: '#/components/schemas/document_top-level'
        document.tree-level:
          $ref: '#/components/schemas/document_tree-level'
        document.tree-order:
          $ref: '#/components/schemas/document_tree-order'
        document.type:
          $ref: '#/components/schemas/document_type'
        document.uri:
          $ref: '#/components/schemas/document_uri'
        dts.content:
          $ref: '#/components/schemas/dts_content'
        dts.id:
          $ref: '#/components/schemas/dts_id'
    
    document_fields:
      type: array
      items:
        type: string
        enum: [
              document.top-level
              ,document.tree-level
              ,document.tree-order
              ,document.type
              ,document.uri
              ,dts.id
              ,document.*
              ]
    document_top-level:
      type: boolean
      description: Boolean that indicates if the file in a dts is the entry point.
      example: true
  
    document_tree-level:
      type: integer
      description: Level of the files in terms of which files import or reference child files.
      example: 2
      
    document_tree-order:
      type: integer
      description: Order of the files in terms of how the dts is compiled from the underlying documents.
      example: 2
      
    document_type:
      type: string
      description: Indicates if the document is a schema, linkbase or instance.
      example: 'inline'
      
    document_uri:
      type: string
      format: uri
      description: The url at which the document comprising the dts is located..
      example: 'http://www.sec.gov/Archives/edgar/data/46619/000004661918000117/hei1031201810k.htm'
      
    dts_content:
      type: string
      description: Contents of the document
      example: 'Contents of the file contains .....'
      
    
    dts_id:
      type: integer
      description: The dts identifier for a given group of taxonomies. XBRL facts and linkbases are typically associated with a given report that is asscociated with a dts.
      example: 1
      
  parameters:    
    document.top-level_Param:
      in: query
      name: document.top-level
      schema:
          type: boolean
      description: Boolean that indicates if the file in a dts is the entry point.
      
    document.uri_Param:
      in: query
      name: document.uri
      schema:
          type: boolean
      description: The url at which the document comprising the dts is located.
      
    dts.id_Param:
        in: query
        name: dts.id
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
        description: The dts identifier for a given group of taxonomies. XBRL facts and linkbases are typically associated with a given report that is asscociated with a dts.
        example: 321964
  responses:
    bad_request:
      description: >
        Malformed request or missing fields. Check that Content-Type matches the format/encoding, and that all required fields are spelled correctly, have correct types, and valid values. 
      content:
        applications/json:
          schema:
            $ref: '#/components/schemas/error_message'
          example:
            error: bad_request
            error_description: Missing a field 'xxx'
    bad_token:
      description: The token is invalid, expired, or corrupted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_message'
          example:
            error: unauthorized,
            error_description: Cannot convert access token to JSON
    unauthorized:
      description: >
        Bad credentials, or could not read credentials due to malformed JSON
         * "Full authentication is required..." -> malformed JSON
         * "Bad client credentials" -> client_id/client_secret pair invalid
         * "Bad credentials" -> username/password pair invalid
      content:
        applications/json:
          schema:
            $ref: '#/components/schemas/error_message'
          example:
            error: unauthorized
            error_description: Full authentication is required to access this resource
    not_found:
      description: This resource doesn't exist or you don't have the permissions to view it
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_message'
          example: 
            error: not_found
            error_description: An entity with that name could not be found
    method_not_allowed:
      description: Method not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_message'
          example: 
            error: method_not_allowed
            error_description: Request method 'DELETE' not supported
    internal_server_error:
      description: Internal error, not the fault of the client
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/error_message'
          example: 
            error: internal_error
            error_description: Unknown error, try again later